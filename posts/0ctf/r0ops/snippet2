$ idaq64 -Sdecode.py -B r0ops 42>&1
0x0e0b08a0 -> 0x0dead1f8: pop     rcx ;; = 0x8
0x0e0b08b0 -> 0x0dead275: pop     r9 ;; = 0x1337deadbeef0095
0x0e0b08c0 -> 0x0dead127: mov     rax, [rdi]
0x0e0b08c8 -> 0x0dead0f1: add     rsi, 8
0x0e0b08d0 -> 0x0dead208: mov     [rsi], rax
0x0e0b08d8 -> 0x0dead26b: mov     r8, [rsi]
0x0e0b08e0 -> 0x0dead0fc: sub     rsi, 8
0x0e0b08e8 -> 0x0dead107: add     rdi, 8
0x0e0b08f0 -> 0x0dead0f1: add     rsi, 8
0x0e0b08f8 -> 0x0dead27e: mov     [rsi], r9
0x0e0b0900 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0908 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0910 -> 0x0dead1f0: pop     rbx ;; = 0xcafe
0x0e0b0920 -> 0x0dead145: imul    rax, rbx
0x0e0b0928 -> 0x0dead0f1: add     rsi, 8
0x0e0b0930 -> 0x0dead208: mov     [rsi], rax
0x0e0b0938 -> 0x0dead288: mov     r9, [rsi]
0x0e0b0940 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0948 -> 0x0dead0f1: add     rsi, 8
0x0e0b0950 -> 0x0dead27e: mov     [rsi], r9
0x0e0b0958 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0960 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0968 -> 0x0dead1f0: pop     rbx ;; = 0xbeef
0x0e0b0978 -> 0x0dead131: add     rax, rbx
0x0e0b0980 -> 0x0dead0f1: add     rsi, 8
0x0e0b0988 -> 0x0dead208: mov     [rsi], rax
0x0e0b0990 -> 0x0dead288: mov     r9, [rsi]
0x0e0b0998 -> 0x0dead0fc: sub     rsi, 8
0x0e0b09a0 -> 0x0dead2cc: pop     r12 ;; = 0x1
0x0e0b09b0 -> 0x0dead292: pop     r10 ;; = 0x3419
0x0e0b09c0 -> 0x0dead1e8: pop     rax ;; = 0x0
0x0e0b09d0 -> 0x0dead1f0: pop     rbx ;; = 0x0
0x0e0b09e0 -> 0x0dead200: pop     rdx ;; = 0x1d8
0x0e0b09f0 -> 0x0dead19f: cmp     rax, rbx
              0x0dead1a2: jnz     short near ptr unk_DEAD1A7
              0x0dead1a4: add     rsp, rdx
0x0e0b09f8 -> 0x0dead0f1: add     rsi, 8
0x0e0b0a00 -> 0x0dead29b: mov     [rsi], r10
0x0e0b0a08 -> 0x0dead2c2: mov     r11, [rsi]
0x0e0b0a10 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0a18 -> 0x0dead0f1: add     rsi, 8
0x0e0b0a20 -> 0x0dead2b8: mov     [rsi], r11
0x0e0b0a28 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0a30 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0a38 -> 0x0dead1f0: pop     rbx ;; = 0x1
0x0e0b0a48 -> 0x0dead177: and     rax, rbx
0x0e0b0a50 -> 0x0dead0f1: add     rsi, 8
0x0e0b0a58 -> 0x0dead208: mov     [rsi], rax
0x0e0b0a60 -> 0x0dead2c2: mov     r11, [rsi]
0x0e0b0a68 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0a70 -> 0x0dead0f1: add     rsi, 8
0x0e0b0a78 -> 0x0dead2b8: mov     [rsi], r11
0x0e0b0a80 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0a88 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0a90 -> 0x0dead1f0: pop     rbx ;; = 0x1
0x0e0b0aa0 -> 0x0dead200: pop     rdx ;; = 0x68
0x0e0b0ab0 -> 0x0dead1ae: cmp     rax, rbx
              0x0dead1b1: jz      short near ptr unk_DEAD1B6
              0x0dead1b3: add     rsp, rdx
0x0e0b0ab8 -> 0x0dead0f1: add     rsi, 8
0x0e0b0ac0 -> 0x0dead2d5: mov     [rsi], r12
0x0e0b0ac8 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0ad0 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0ad8 -> 0x0dead0f1: add     rsi, 8
0x0e0b0ae0 -> 0x0dead261: mov     [rsi], r8
0x0e0b0ae8 -> 0x0dead226: mov     rbx, [rsi]
0x0e0b0af0 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0af8 -> 0x0dead145: imul    rax, rbx
0x0e0b0b00 -> 0x0dead0f1: add     rsi, 8
0x0e0b0b08 -> 0x0dead208: mov     [rsi], rax
0x0e0b0b10 -> 0x0dead2df: mov     r12, [rsi]
0x0e0b0b18 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0b20 -> 0x0dead0f1: add     rsi, 8
0x0e0b0b28 -> 0x0dead261: mov     [rsi], r8
0x0e0b0b30 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0b38 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0b40 -> 0x0dead0f1: add     rsi, 8
0x0e0b0b48 -> 0x0dead261: mov     [rsi], r8
0x0e0b0b50 -> 0x0dead226: mov     rbx, [rsi]
0x0e0b0b58 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0b60 -> 0x0dead145: imul    rax, rbx
0x0e0b0b68 -> 0x0dead0f1: add     rsi, 8
0x0e0b0b70 -> 0x0dead208: mov     [rsi], rax
0x0e0b0b78 -> 0x0dead26b: mov     r8, [rsi]
0x0e0b0b80 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0b88 -> 0x0dead0f1: add     rsi, 8
0x0e0b0b90 -> 0x0dead29b: mov     [rsi], r10
0x0e0b0b98 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0ba0 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0ba8 -> 0x0dead195: shr     rax, 1
0x0e0b0bb0 -> 0x0dead0f1: add     rsi, 8
0x0e0b0bb8 -> 0x0dead208: mov     [rsi], rax
0x0e0b0bc0 -> 0x0dead2a5: mov     r10, [rsi]
0x0e0b0bc8 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0bd0 -> 0x0dead0f1: add     rsi, 8
0x0e0b0bd8 -> 0x0dead29b: mov     [rsi], r10
0x0e0b0be0 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0be8 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0bf0 -> 0x0dead1f0: pop     rbx ;; = 0x0
0x0e0b0c00 -> 0x0dead200: pop     rdx ;; = 0xfffffffffffffde0
0x0e0b0c10 -> 0x0dead1ae: cmp     rax, rbx
              0x0dead1b1: jz      short locret_DEAD1B6
              0x0dead1b3: add     rsp, rdx
0x0e0b0c18 -> 0x0dead0f1: add     rsi, 8
0x0e0b0c20 -> 0x0dead2d5: mov     [rsi], r12
0x0e0b0c28 -> 0x0dead212: mov     rax, [rsi]
0x0e0b0c30 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0c38 -> 0x0dead0f1: add     rsi, 8
0x0e0b0c40 -> 0x0dead27e: mov     [rsi], r9
0x0e0b0c48 -> 0x0dead226: mov     rbx, [rsi]
0x0e0b0c50 -> 0x0dead0fc: sub     rsi, 8
0x0e0b0c58 -> 0x0dead200: pop     rdx ;; = 0x20
0x0e0b0c68 -> 0x0dead1ae: cmp     rax, rbx
              0x0dead1b1: jz      short locret_DEAD1B6
              0x0dead1b3: add     rsp, rdx
0x0e0b0c70 -> 0x0dead200: pop     rdx ;; = 0xfffffffffffffc38
0x0e0b0c80 -> 0x0dead1df: loop    near ptr unk_DEAD1DB
0x0e0b0c88 -> 0x0dead340: sub     rsp, 10h
              0x0dead344: mov     edi, 0DEAD544h
              0x0dead349: call    near ptr _puts
              0x0dead34e: mov     edi, 0DEAD54Eh
              0x0dead353: mov     eax, 0
              0x0dead358: call    near ptr _printf
              0x0dead35d: mov     dword ptr [rbp-4], 0
              0x0dead364: jmp     short near ptr unk_DEAD38B
              0x0dead366: mov     eax, [rbp-4]
              0x0dead369: cdqe
              0x0dead36b: mov     rax, ds:qword_E0B10C0[rax*8]
              0x0dead373: mov     eax, eax
              0x0dead375: mov     rsi, rax
              0x0dead378: mov     edi, 0DEAD55Dh
              0x0dead37d: mov     eax, 0
              0x0dead382: call    near ptr _printf
              0x0dead387: add     dword ptr [rbp-4], 1
              0x0dead38b: cmp     dword ptr [rbp-4], 7
              0x0dead38f: jle     short loc_DEAD366
              0x0dead391: mov     edi, 0DEAD564h
              0x0dead396: call    near ptr _puts
              0x0dead39b: mov     eax, 0
              0x0dead3a0: call    near ptr unk_DEAD3AF
              0x0dead3a5: leave
0x0e0b0c90 -> 0x0dead3b3: sub     rsp, 10h
              0x0dead3b7: mov     edx, 0
              0x0dead3bc: mov     esi, 0
              0x0dead3c1: mov     edi, 3
              0x0dead3c6: call    near ptr _accept
              0x0dead3cb: mov     [rbp-4], eax
              0x0dead3ce: mov     eax, [rbp-4]
              0x0dead3d1: mov     ecx, 0
              0x0dead3d6: mov     edx, 1000h
              0x0dead3db: mov     esi, 0E0B10C0h
              0x0dead3e0: mov     edi, eax
              0x0dead3e2: call    near ptr _recv
              0x0dead3e7: mov     eax, [rbp-4]
              0x0dead3ea: mov     edi, eax
              0x0dead3ec: mov     eax, 0
              0x0dead3f1: call    near ptr _close
              0x0dead3f6: mov     edx, 0E0AF0A0h
              0x0dead3fb: mov     esi, 0E0B00A0h
              0x0dead400: mov     eax, 200h
              0x0dead405: mov     rdi, rdx
              0x0dead408: mov     rcx, rax
              0x0dead40b: rep movsq
              0x0dead40e: mov     eax, 0E0B10C0h
              0x0dead413: mov     rdi, rax
              0x0dead416: mov     eax, 0E0B20C0h
              0x0dead41b: mov     rsi, rax
              0x0dead41e: mov     eax, 0E0AF8A0h
              0x0dead423: mov     rsp, rax
